Ques [
  
Task 1

Select Programming Language, Python selected
Python
Programming Language

Task description
This is a demo task.

Write a function:

def solution(A)

that, given an array A of N integers, returns the smallest positive integer (greater than 0) that does not occur in A.

For example, given A = [1, 3, 6, 4, 1, 2], the function should return 5.

Given A = [1, 2, 3], the function should return 4.

Given A = [−1, −3], the function should return 1.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [1..100,000];
each element of array A is an integer within the range [−1,000,000..1,000,000].
Copyright 2009–2024 by Codility Limited. All Rights Reserved. Unauthorized copying, publication or disclosure prohibited.
]

code =[
A=[1,2,3,5,6,7,1,2]

# find missing no , eg 4 , if no , then give next missing , if all negaive then give 1

def FindingMissing(A):
  UniqueElements=set(A)

  UniqueElements = [x for x in UniqueElements if x>0]

  UniqueElements=list(UniqueElements)
  UniqueElements=sorted(UniqueElements)

  length=len(UniqueElements)

  if length >0 and UniqueElements[length-1] >0:
    for i in range(1,len(UniqueElements)+1):

      if i !=UniqueElements[i-1]:
        print('Missing Val First case ',i)
        return
      
      if i == len(UniqueElements):
        print('Missing Val First case Max',i+1)
        return
        
  else:
    print('Missing Val Second case ',1)

]